---
- name: Kubernetes Node Setup
  gather_facts: true
  hosts: nodes
  pre_tasks:
    - raw: test -e /usr/bin/python3 || (apt -y update && install -y python-minimal)

  tasks:
    - name: install requirements
      become: true
      tags:
        - install-dependencies
      apt:
        state: present
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg

    - name: Enable forwarding IPv4 and letting iptables see bridged traffic
      tags:
        - install-container-runtime
      become: true
      shell: |
        cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
        overlay
        br_netfilter
        EOF

        sudo modprobe overlay
        sudo modprobe br_netfilter

        # sysctl params required by setup, params persist across reboots
        cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
        net.bridge.bridge-nf-call-iptables  = 1
        net.bridge.bridge-nf-call-ip6tables = 1
        net.ipv4.ip_forward                 = 1
        EOF

        # Apply sysctl params without reboot
        sudo sysctl --system

    - name: Get DEB architecture
      tags:
        - install-container-runtime
      shell: dpkg --print-architecture
      register: deb_architecture

    - name: APT add docker key
      tags:
        - install-container-runtime
      shell: |
        sudo mkdir -m 0755 -p /etc/apt/keyrings
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --yes --dearmor -o /etc/apt/keyrings/docker.gpg
    - name: APT add docker repository
      tags:
        - install-container-runtime
      become: true
      ansible.builtin.apt_repository:
        repo: "deb [arch={{ deb_architecture.stdout }} signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present

    - name: install containerd
      become: true
      tags:
        - install-container-runtime
      apt:
        state: present
        update_cache: yes
        force_apt_get: true
        name:
          - containerd.io
    - name: Configuring the systemd cgroup driver
      tags:
        - install-container-runtime
      become: true
      shell: |
        cat <<EOF | sudo tee /etc/containerd/config.toml
        [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc]
          [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc.options]
            SystemdCgroup = true
        EOF
        # Apply sysctl params without reboot
        sudo systemctl restart containerd
    - name: Disable swap for current session
      tags:
        - disable-swap
      command: swapoff -a
      become: true

    - name: Disable swap permanently, persist reboots
      tags:
        - disable-swap
      become: true
      replace:
        path: /etc/fstab
        regexp: '^(\s*)([^#\n]+\s+)(\w+\s+)swap(\s+.*)$'
        replace: '#\1\2\3swap\4'
        backup: yes

    - name: APT add Google Cloud public signing key key
      tags:
        - install-kubernetes-tools
      become: true
      ansible.builtin.get_url:
        url: "https://packages.cloud.google.com/apt/doc/apt-key.gpg"
        dest: /etc/apt/trusted.gpg.d/kubernetes-archive-keyring.gpg

    - name: Add the Kubernetes apt repository
      tags:
        - install-kubernetes-tools
      become: true
      ansible.builtin.apt_repository:
        repo: "deb [signed-by=/etc/apt/trusted.gpg.d/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main"
        state: present

    - name: Hold kubeadm
      tags:
        - install-kubernetes-tools
      become: true
      ansible.builtin.dpkg_selections:
        name: kubeadm
        selection: hold
    - name: Hold kubelet
      tags:
        - install-kubernetes-tools
      become: true
      ansible.builtin.dpkg_selections:
        name: kubelet
        selection: hold
    - name: Hold kubectl
      tags:
        - install-kubernetes-tools
      become: true
      ansible.builtin.dpkg_selections:
        name: kubectl
        selection: hold
    - name: install Kubernetes tools (kubelet, kubeadm, kubectl)
      become: true
      tags:
        - install-kubernetes-tools
      apt:
        state: present
        update_cache: yes
        force_apt_get: true
        allow_change_held_packages: false
        name:
          - kubelet
          - kubeadm
          - kubectl
